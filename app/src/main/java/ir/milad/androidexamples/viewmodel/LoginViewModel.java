package ir.milad.androidexamples.viewmodel;

import android.text.TextUtils;
import android.util.Patterns;

import androidx.databinding.BaseObservable;
import androidx.databinding.Bindable;

import ir.milad.androidexamples.BR;
import ir.milad.androidexamples.model.User;

public class LoginViewModel extends BaseObservable {
    /*The above class can also extend ViewModel.
     But we need BaseObservable since it converts
     the data into streams and notifies when the
     toastMessage property is changed.*/

    //BR is autoGenerated

    private User user;

    private String successMessage = "Login was successful";
    private String errorMessage = "Email or password not valid";

    @Bindable
    private String toastMessage = null;

    public String getToastMessage(){
        return toastMessage;
    }

    private void setToastMessage(String toastMessage){
        this.toastMessage = toastMessage;
        notifyPropertyChanged(BR.toastMessage);
    }

    public void setUserEmail(String email){
        user.setEmail(email);
        notifyPropertyChanged(BR.userEmail);
    }

    @Bindable
    public String getUserEmail(){
        return  user.getEmail();
    }

    @Bindable
    public String getUserPassword(){
        return user.getPassword();
    }

    public void setUserPassword(String password){
        user.setPassword(password);
        notifyPropertyChanged(BR.userPassword);
    }

    public LoginViewModel(){
        user = new User("","");
    }

    public void onLoginClicked(){
        if(isInputDataValid())
            setToastMessage(successMessage);
        else
            setToastMessage(errorMessage);
    }

    public boolean isInputDataValid(){
        return !TextUtils.isEmpty(getUserEmail()) && Patterns.EMAIL_ADDRESS
                .matcher(getUserEmail()).matches() && getUserPassword().length() > 5;
    }

}
